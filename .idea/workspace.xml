<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="543a507f-7055-4b1c-8a3a-6a433cf4bfb8" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/queue/distanceutil_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/queue/distanceutil_test.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/go1.13.darwin-amd64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1RFkVGn9Jd6dVXDoxkz3WkgrTTf" />
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="true" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="go.vgo" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Docker.Dockerfile">
    <configuration name="go build client.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="location-server-ghub" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/vendor/client/client.go" />
      <package value="location-server-ghub" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build loadbalancetest.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="location-server-ghub" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/vendor/loadbalancetest/loadbalancetest.go" />
      <package value="location-server-ghub" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build location-server-ghub" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="location-server-ghub" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/" />
      <package value="location-server-ghub" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="location-server-ghub" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="location-server-ghub" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="distanceutil_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="location-server-ghub" />
      <working_directory value="$PROJECT_DIR$/vendor/queue" />
      <framework value="gotest" />
      <kind value="FILE" />
      <package value="location-server-ghub" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/vendor/queue/distanceutil_test.go" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="buildCliOptions" value="" />
          <option name="command" value="" />
          <option name="containerName" value="locationserver" />
          <option name="entrypoint" value="" />
          <option name="imageTag" value="loc-ser" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8081" />
                <option name="hostPort" value="6060" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="commandLineOptions" value="" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Dockerfile" />
      <item itemvalue="Go Build.go build location-server-ghub" />
      <item itemvalue="Go Build.go build loadbalancetest.go" />
      <item itemvalue="Go Build.go build client.go" />
      <item itemvalue="Go Build.go build main.go" />
      <item itemvalue="Go Test.distanceutil_test.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Dockerfile" />
        <item itemvalue="Go Test.distanceutil_test.go" />
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Build.go build loadbalancetest.go" />
        <item itemvalue="Go Build.go build client.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="ServiceViewManager">
    <option name="allServicesViewState">
      <serviceView>
        <option name="contentProportion" value="0.34065935" />
        <treeState>
          <expand />
          <select />
        </treeState>
      </serviceView>
    </option>
    <option name="viewStates">
      <list>
        <serviceView>
          <option name="contentProportion" value="0.18695652" />
          <treeState>
            <expand>
              <path>
                <item name="services root" type="e789fda9:ObjectUtils$Sentinel" />
                <item name="com.intellij.execution.services.ServiceModel$ServiceNode@41fc9cee" type="9fbbdea:ServiceModel$ServiceNode" />
              </path>
              <path>
                <item name="services root" type="e789fda9:ObjectUtils$Sentinel" />
                <item name="com.intellij.execution.services.ServiceModel$ServiceNode@41fc9cee" type="9fbbdea:ServiceModel$ServiceNode" />
                <item name="com.intellij.execution.services.ServiceModel$ServiceNode@230835a6" type="9fbbdea:ServiceModel$ServiceNode" />
              </path>
            </expand>
            <select />
          </treeState>
          <option name="viewType" value="contributor" />
          <option name="roots">
            <list>
              <ServiceState>
                <option name="contributor" value="com.intellij.docker.view.DockerServiceViewContributor" />
              </ServiceState>
            </list>
          </option>
        </serviceView>
      </list>
    </option>
    <option name="selectedView" value="0" />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>